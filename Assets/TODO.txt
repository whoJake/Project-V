Camera
	ThirdPersonController.cs
		?Zoom settings
		Add better orbit setup
		Maybe implement some kind of focus point catch up when object is moving fast but camera isnt
		Have player be made more transparent or dithered when camera is getting close to it (could apply to all objects)
	ThirdPersonControllerEditor.cs
		Have rect/seperator around willControlTransform bool so that it looks nicer
Player
	PlayerMovement.cs
		Convert to state machine to better handle how movement is handled in each case
		Add additional downward velocity when going down a short slope so that the player will "stick" to the floor
		Maybe look at switching to UnityInput 2.0 as it uses input events that you subscribe to rather than reading them straight from Input class
		Look for disable of bunnyhopping (might be in switching to UnityInput 2.0)
		Tweak drag values so that it feels better
		Update PlayerMovementEditor.cs
		General refactor for readability, state machine will probably help this
	StatHandler.cs
		Is queried by mechanics in order to get statistics such as PlayerMovement.cs asking for the speed when its about to move
		Events for StatChanged etc to get ready for implementing it into UI
	Animation
		Seperate movement of Upper and Lower body
		Upper body is controlled by look direction and always aims at it
		Lower body responds to movement and lightly follows the upper body to align itself

		Upper Body
			Holds torso, arms and head
			Faces towards focus point on all axis
		Lower Body
			Holds hips and legs
			Follows closely behind the upper body to align itself overtime instead of instantly
			Will rotate based on player movement
Items
	Design
		Item rarity colours
		?Items are held by different types of plants/objects (ice, big plant) which dictates their rarity aswell as their element
		How they should be displayed on the ground
		Rotate or follow camera

		Item comes up from ground, hung slightly away from the floor with a small plant branch
		Element erupts from underneath it which infuses it with its element
		Elemental eruption under item seems good with a generic holder for the item

		Element types
			Fire/Ice/Water/Ground + others Gravitational etc
			Something more abstract? Starrail types
			How should they interact with eachother? Synergies ofc but should some detriment others? Maybe sacrifice one part of them for something different

	Gameplay
		How are items discovered across runs
		?Check-points to hand in items so they can be upgraded
		?Risk keeping the item for the run or hand it in so that you can upgrade/unlock it for the next run
		How does rarity change with depth/layer
		When are items dropped. From bosses? From monster packs? From chests/item areas?
	Implementation
		Base item class that can hold an item
		Will the stat buff directly affect stats or will it be added to a pool that recalculates stats after a pickup

		Element
			Fire
				Spawn some particles, shader then colours fire based on how many particles are nearby
				More particles nearby = brighter shade from colour
				Less particles nearby = colder fire colour
				Particle has lifetime, once it reaches end of lifetime it respawns at the bottom as a fresh particle
World
	MeshMaths.cs
		Add method that can join meshInfos
		Add method to remove shared vertices
	How is this mesh going to be created
	Noise needs to be made but creating this in a bit texture is expensive so it'll have to be prodedural to displace the vertices
	Will displacing the vertices even work? Need to look at something else like marching cubes or (the one No Mans Sky uses)
	Think how sectors will be connected (classic problem)
	Perhaps a representation of visibility in order to better LOD these chunks

	How will lighting work when there is no direct sunlight to a lot of the map, obviously big whole in middle but it might not be possible for that to theoritically light the entire area
	