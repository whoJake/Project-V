#pragma kernel CSMain
#include "../MathUtils.cginc"

RWTexture3D<float> _DensityTexture;
float3 chunk_origin;
float voxel_scale;

float3 point_position;
float point_radius;
int multiplier;

[numthreads(8,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    //Texture dimensions and return condition
    uint width, height, depth;
    _DensityTexture.GetDimensions(width, height, depth);
    if (id.x >= width || id.y >= height || id.z >= depth) return;
    uint3 texture_size = uint3(width, height, depth);
    

    float3 worldPosition = chunk_origin + (id * voxel_scale);
    float dstFromPoint = distance(point_position, worldPosition);
    float dstFromPointSurface = dstFromPoint - point_radius;

    float weight = saturate(invlerp(dstFromPoint, 0, point_radius));
    weight = 1 - pow(weight, 4);
    float rawchange = 0.5 * multiplier;

    float change = rawchange * weight;

    _DensityTexture[id.xyz] = saturate(_DensityTexture[id.xyz] - change);
}
